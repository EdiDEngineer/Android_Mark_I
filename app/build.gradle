apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

/**firebase**/
apply plugin: 'com.google.gms.google-services'
android {
    compileSdkVersion  rootProject.compileSdkVersion
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.android.androidmarki"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        //multisexapplication
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        customDebugType {
            debuggable true

        }
        debug {
            ext.alwaysUpdateBuildId = false
            crunchPngs false // Enabled by default for RELEASE build type

        }
    }

//bytecode
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//check use
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding = true
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    androidExtensions {
        experimental = true
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
    packagingOptions {
        pickFirst 'META-INF/AL2.0'
        pickFirst 'META-INF/LGPL2.1'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "com.google.android.material:material:$material_version" //material
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.legacy:legacy-support-v4:$androidX_legacy_support"
    implementation 'com.android.volley:volley:1.2.1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.cardview:cardview:$card_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.annotation:annotation:$androidX_annotations"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation platform('com.google.firebase:firebase-bom:25.3.1')

//timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //androidx fragment and activity
    implementation "androidx.activity:activity-ktx: $activity_version"
    implementation "androidx.fragment:fragment-ktx: $fragment_version"

    //firebase
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-iid" //for fcm
    implementation "com.google.firebase:firebase-messaging" //for fcm

    // WorkManager
    implementation "android.arch.work:work-runtime-ktx:$work_version"

    //multidex Lib
    implementation "androidx.multidex:multidex:$rootProject.multidexVersion"

    // Stetho is a sophisticated debug bridge for Android applications. When enabled, developers have access to the Chrome Developer Tools feature natively part of the Chrome desktop browser.
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    //Glide
    implementation("com.github.bumptech.glide:glide:4.11.0@aar") {
        transitive = true
    }
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //googleplay serices
    implementation 'com.google.android.gms:play-services-auth:18.0.0' //Google Account Login
    implementation "com.google.android.gms:play-services-location:$play_services_version"  // Client for retrieving location
    implementation "com.google.android.gms:play-services-maps:$play_services_version" // Client for maps

    // Architecture Components
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"     // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"     //live data viewmodel lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"     // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"     // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"     // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"     // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"     // optional - ReactiveStreams support for LiveData
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutine_version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"      // Retrofit Coroutines Support

    // Joda time library for dealing with time
    implementation "joda-time:joda-time:$joda_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"     // optional - Test helpers for LiveData
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"
    testImplementation "androidx.room:room-testing:$room_version"     // Test helpers

    // Dependencies for Android instrumented unit tests
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dex_maker_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.test:core:$androidX_test_core_version"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidX_test_core_version"
    testImplementation "androidx.test.ext:junit:$androidX_test_ext_kotlin_runner_version"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidX_test_ext_kotlin_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"


}
