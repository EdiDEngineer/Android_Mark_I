apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

/**firebase**/
apply plugin: 'com.google.gms.google-services'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.android.androidmarki"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        //multisexapplication
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        customDebugType {
            debuggable true

        }
        debug {
            ext.alwaysUpdateBuildId = false
            crunchPngs false // Enabled by default for RELEASE build type

        }
    }

//bytecode
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//check use
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    androidExtensions {
        experimental = true
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "com.google.android.material:material:$material_version"
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    //firebase
    implementation "com.google.firebase:firebase-analytics-ktx:$analytics_version"
    implementation "com.google.firebase:firebase-auth-ktx:$auth_version"

    //multidex Lib
    implementation "androidx.multidex:multidex:$rootProject.multidexVersion"

    //Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Stetho is a sophisticated debug bridge for Android applications. When enabled, developers have access to the Chrome Developer Tools feature natively part of the Chrome desktop browser.
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    //Glide
    implementation("com.github.bumptech.glide:glide:4.11.0@aar") {
        transitive = true
    }
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    implementation "androidx.room:room-runtime:$room_version"
   kapt "androidx.room:room-compiler:$room_version"    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    //androidx fragment and activity
    implementation 'androidx.activity:activity-ktx:1.2.0-alpha04'
    implementation 'androidx.fragment:fragment-ktx:1.3.0-alpha04'


    //live data viewmodel lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    //live data viewmodel lifecycle
    implementation 'androidx.preference:preference-ktx:1.1.1'

    implementation 'com.google.android.gms:play-services-auth:18.0.0'



    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutine_version"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    // Joda time library for dealing with time
    implementation "joda-time:joda-time:$joda_version"
    // WorkManager
    implementation "android.arch.work:work-runtime-ktx:$work_version"

}
